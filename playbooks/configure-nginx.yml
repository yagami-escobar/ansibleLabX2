---
# playbooks/configure-nginx.yml - Configuración de Nginx

# TAREAS DE CONFIGURACIÓN
- name: "Config: Crear directorios para virtual hosts"
  file:
    path: "{{ item }}"
    state: directory
    owner: "{{ nginx_user }}"
    group: "{{ nginx_user }}"
    mode: '0755'
  loop:
    - /etc/nginx/sites-available
    - /etc/nginx/sites-enabled
    - /etc/nginx/conf.d
  tags: ['config', 'directories']

- name: "Config: Crear directorios de documentos web"
  file:
    path: "{{ item.document_root }}"
    state: directory
    owner: "{{ nginx_user }}"
    group: "{{ nginx_user }}"
    mode: '0755'
  loop: "{{ virtual_hosts }}"
  tags: ['config', 'web-dirs']

- name: "Config: Desplegar configuración principal de nginx"
  template:
    src: nginx.conf.j2
    dest: /etc/nginx/nginx.conf
    owner: root
    group: root
    mode: '0644'
    backup: yes
  notify:
    - validate nginx
    - restart nginx
  tags: ['config', 'main-config']

- name: "Config: Desplegar configuración de virtual hosts"
  template:
    src: default-site.j2
    dest: /etc/nginx/sites-available/default
    owner: root
    group: root
    mode: '0644'
    backup: yes
  notify:
    - validate nginx
    - reload nginx
  tags: ['config', 'vhosts']

- name: "Config: Eliminar configuración original por defecto"
  file:
    path: /etc/nginx/sites-enabled/default
    state: absent
  when: ansible_os_family == "Debian"
  tags: ['config', 'cleanup']
  
- name: "Config: Habilitar sitio personalizado"
  file:
    src: /etc/nginx/sites-available/default
    dest: /etc/nginx/sites-enabled/default
    state: link
    force: yes
  when: ansible_os_family == "Debian"
  notify:
    - validate nginx
    - reload nginx
  tags: ['config', 'enable-sites']

- name: "Config: Desplegar páginas de inicio personalizadas"
  template:
    src: index.html.j2
    dest: "{{ item.document_root }}/index.html"
    owner: "{{ nginx_user }}"
    group: "{{ nginx_user }}"
    mode: '0644'
  loop: "{{ virtual_hosts }}"
  tags: ['config', 'web-content']

- name: "Config: Configurar logrotate para nginx"
  copy:
    src: nginx-logrotate
    dest: /etc/logrotate.d/nginx
    owner: root
    group: root
    mode: '0644'
  tags: ['config', 'logrotate']

- name: "Config: Crear archivos de log si no existen"
  file:
    path: "{{ item }}"
    state: touch
    owner: "{{ nginx_user }}"
    group: adm
    mode: '0640'
  loop:
    - "{{ nginx_access_log }}"
    - "{{ nginx_error_log }}"
  tags: ['config', 'logs']

- name: "Config: Configurar firewall para HTTP/HTTPS"
  ufw:
    rule: allow
    port: "{{ item }}"
    proto: tcp
  loop:
    - "{{ http_port }}"
    - "{{ https_port }}"
  when: firewall_enabled | default(false)
  tags: ['config', 'firewall']

- name: "Verificación: Comprobar sintaxis de nginx"
  command: nginx -t
  register: nginx_syntax_check
  changed_when: false
  failed_when: nginx_syntax_check.rc != 0
  tags: ['config', 'verify']

- name: "Verificación: Mostrar resultado de sintaxis"
  debug:
    var: nginx_syntax_check.stderr_lines
  when: nginx_syntax_check.stderr_lines is defined
  tags: ['config', 'verify']

- name: "Service: Asegurar que nginx esté iniciado y habilitado"
  service:
    name: nginx
    state: "{{ nginx_service_state }}"
    enabled: "{{ nginx_service_enabled }}"
  tags: ['config', 'service']

- name: "Verificación: Comprobar que nginx responde"
  uri:
    url: "http://{{ ansible_default_ipv4.address }}:{{ http_port }}"
    method: GET
    status_code: 200
  delegate_to: localhost
  become: false
  tags: ['config', 'verify', 'health-check']

- name: "Info: Mostrar información de configuración"
  debug:
    msg: |
      =====================================
      CONFIGURACIÓN COMPLETADA
      =====================================
      Host: {{ ansible_hostname }}
      IP: {{ ansible_default_ipv4.address }}
      Puerto HTTP: {{ http_port }}
      Puerto HTTPS: {{ https_port }}
      Workers: {{ nginx_worker_processes }}
      Conexiones por worker: {{ nginx_worker_connections }}
      Virtual Hosts configurados: {{ virtual_hosts | length }}
      =====================================
  tags: ['config', 'info']

